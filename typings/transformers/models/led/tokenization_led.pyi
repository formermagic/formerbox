"""
This type stub file was generated by pyright.
"""

from ...utils import logging
from ..bart.tokenization_bart import BartTokenizer

"""Tokenization classes for LED."""
logger = logging.get_logger(__name__)
PRETRAINED_VOCAB_FILES_MAP = { "vocab_file": { "allenai/led-base-16384": "https://huggingface.co/allenai/led-base-16384/resolve/main/vocab.json" },"merges_file": { "allenai/led-base-16384": "https://huggingface.co/allenai/led-base-16384/resolve/main/merges.txt" },"tokenizer_file": { "allenai/led-base-16384": "https://huggingface.co/allenai/led-base-16384/resolve/main/tokenizer.json" } }
PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES = { "allenai/led-base-16384": 16384 }
class LEDTokenizer(BartTokenizer):
    """
    Construct a LED tokenizer.

    :class:`~transformers.LEDTokenizer` is identical to :class:`~transformers.BartTokenizer` and runs end-to-end
    tokenization: punctuation splitting and wordpiece.

    Refer to superclass :class:`~transformers.BartTokenizer` for usage examples and documentation concerning
    parameters.
    """
    pretrained_vocab_files_map = ...
    max_model_input_sizes = ...


