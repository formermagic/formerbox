"""
This type stub file was generated by pyright.
"""

from typing import Optional, Tuple
from ...tokenization_utils import PreTrainedTokenizer
from ...utils import logging

"""Tokenization classes for Salesforce CTRL."""
logger = logging.get_logger(__name__)
VOCAB_FILES_NAMES = { "vocab_file": "vocab.json","merges_file": "merges.txt" }
PRETRAINED_VOCAB_FILES_MAP = { "vocab_file": { "ctrl": "https://raw.githubusercontent.com/salesforce/ctrl/master/ctrl-vocab.json" },"merges_file": { "ctrl": "https://raw.githubusercontent.com/salesforce/ctrl/master/ctrl-merges.txt" } }
PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES = { "ctrl": 256 }
CONTROL_CODES = { "Pregnancy": 168629,"Christianity": 7675,"Explain": 106423,"Fitness": 63440,"Saving": 63163,"Ask": 27171,"Ass": 95985,"Joke": 163509,"Questions": 45622,"Thoughts": 49605,"Retail": 52342,"Feminism": 164338,"Writing": 11992,"Atheism": 192263,"Netflix": 48616,"Computing": 39639,"Opinion": 43213,"Alone": 44967,"Funny": 58917,"Gaming": 40358,"Human": 4088,"India": 1331,"Joker": 77138,"Diet": 36206,"Legal": 11859,"Norman": 4939,"Tip": 72689,"Weight": 52343,"Movies": 46273,"Running": 23425,"Science": 2090,"Horror": 37793,"Confession": 60572,"Finance": 12250,"Politics": 16360,"Scary": 191985,"Support": 12654,"Technologies": 32516,"Teenage": 66160,"Event": 32769,"Learned": 67460,"Notion": 182770,"Wikipedia": 37583,"Books": 6665,"Extract": 76050,"Confessions": 102701,"Conspiracy": 75932,"Links": 63674,"Narcissus": 150425,"Relationship": 54766,"Relationships": 134796,"Reviews": 41671,"News": 4256,"Translation": 26820,"multilingual": 128406 }
def get_pairs(word):
    """
    Return set of symbol pairs in a word.

    Word is represented as tuple of symbols (symbols being variable-length strings).
    """
    ...

class CTRLTokenizer(PreTrainedTokenizer):
    """
    Construct a CTRL tokenizer. Based on Byte-Pair-Encoding.

    This tokenizer inherits from :class:`~transformers.PreTrainedTokenizer` which contains most of the main methods.
    Users should refer to this superclass for more information regarding those methods.

    Args:
        vocab_file (:obj:`str`):
            Path to the vocabulary file.
        merges_file (:obj:`str`):
            Path to the merges file.
        unk_token (:obj:`str`, `optional`, defaults to :obj:`"<unk>"`):
            The unknown token. A token that is not in the vocabulary cannot be converted to an ID and is set to be this
            token instead.
    """
    vocab_files_names = ...
    pretrained_vocab_files_map = ...
    max_model_input_sizes = ...
    control_codes = ...
    def __init__(self, vocab_file, merges_file, unk_token=..., **kwargs) -> None:
        ...
    
    @property
    def vocab_size(self):
        ...
    
    def get_vocab(self):
        ...
    
    def bpe(self, token):
        ...
    
    def convert_tokens_to_string(self, tokens):
        """ Converts a sequence of tokens (string) in a single string. """
        ...
    
    def save_vocabulary(self, save_directory: str, filename_prefix: Optional[str] = ...) -> Tuple[str]:
        ...
    


