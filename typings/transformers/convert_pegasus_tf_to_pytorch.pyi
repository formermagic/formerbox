"""
This type stub file was generated by pyright.
"""

import argparse
from typing import Dict
from transformers import PegasusForConditionalGeneration

"""
This type stub file was generated by pyright.
"""
PATTERNS = [["memory_attention", "encoder_attn"], ["attention", "attn"], ["/", "."], [".LayerNorm.gamma", "_layer_norm.weight"], [".LayerNorm.beta", "_layer_norm.bias"], ["r.layer_", "r.layers."], ["output_proj", "out_proj"], ["ffn.dense_1.", "fc2."], ["ffn.dense.", "fc1."], ["ffn_layer_norm", "final_layer_norm"], ["kernel", "weight"], ["encoder_layer_norm.", "encoder.layer_norm."], ["decoder_layer_norm.", "decoder.layer_norm."], ["embeddings.weights", "shared.weight"]]
def rename_state_dict_key(k):
    ...

def convert_pegasus(tf_weights: dict, cfg_updates: dict) -> PegasusForConditionalGeneration:
    ...

def get_tf_weights_as_numpy(path=...) -> Dict:
    ...

def convert_pegasus_ckpt_to_pytorch(ckpt_path: str, save_dir: str):
    ...

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    args = parser.parse_args()
